input {
  beats {
    port => 5044
  }
}

filter {
  # --- MYSQL parsing -------------------------------------------------------
  if [container][labels][com_docker_compose_service] =~ "mysql" {
    grok {
      match => { "message" => [
        "^%{TIMESTAMP_ISO8601:mysql.timestamp}Z?\s+%{INT:mysql.thread}\s+\[%{WORD:mysql.level}\]\s+\[%{DATA:mysql.code}\]\s+\[%{DATA:mysql.component}\]\s+%{GREEDYDATA:mysql.msg}$",
        "^%{TIMESTAMP_ISO8601:mysql.timestamp}Z?\s+%{INT:mysql.thread}\s+\[%{WORD:mysql.level}\]\s+%{GREEDYDATA:mysql.msg}$",
        "%{GREEDYDATA:mysql.msg}"
      ] }
      tag_on_failure => ["_mysql_grok_failure"]
      remove_field => ["message"]
    }
    
    date {
      match => [ "mysql.timestamp", "ISO8601", "yyyy-MM-dd'T'HH:mm:ss.SSSSSS'Z'", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'" ]
      target => "@timestamp"
      timezone => "UTC"
      remove_field => ["mysql.timestamp"]
      tag_on_failure => ["_mysql_date_failure"]
    }

    mutate {
      add_field => { "event.dataset" => "mysql.app" }
    }
  }

  # --- GHOST parsing -------------------------------------------------------
  if [container][labels][com_docker_compose_service] =~ "ghost" {
    grok {
      match => { "message" => [
        "^\[%{TIMESTAMP_ISO8601:ghost.timestamp}\]\s+%{LOGLEVEL:ghost.level}\s+%{GREEDYDATA:ghost.msg}$",
        "^\[%{YEAR}-%{MONTHNUM}-%{MONTHDAY}\s+%{TIME:ghost.time}\]\s+%{WORD:ghost.level}\s+%{GREEDYDATA:ghost.msg}$",
        "%{GREEDYDATA:ghost.msg}"
      ] }
      tag_on_failure => ["_ghost_grok_failure"]
      remove_field => ["message"]
    }

    date {
      match => [ "ghost.timestamp", "ISO8601", "yyyy-MM-dd HH:mm:ss" ]
      target => "@timestamp"
      timezone => "UTC"
      remove_field => ["ghost.timestamp","ghost.time"]
      tag_on_failure => ["_ghost_date_failure"]
    }

    mutate {
      add_field => { "event.dataset" => "ghost.app" }
    }
  }
}

output {
  elasticsearch {
    hosts => "${ELASTIC_HOSTS}"
    user => "${ELASTIC_USER}"
    password => "${ELASTIC_PASSWORD}"
    data_stream => "true"
    ssl_enabled => "false"
  }
}
