services:
  mimir:
    image: grafana/mimir:latest
    restart: unless-stopped
    command: ["-config.file=/etc/mimir.yaml"]
    depends_on:
      - prometheus
    volumes:
      - ./configs/mimir.yaml:/etc/mimir.yaml
      - ./configs/alertmanager.yaml:/etc/alertmanager.yaml # This is default (fallback) config for internal Mimir Alert Manager
      - mimirdata:/data
    ports:
      - 127.0.0.1:9009:9009
    labels:
       prometheus-job: "floral/mimir"
       prometheus-scrape-port: 9009

  prometheus:
    restart: unless-stopped
    image: prom/prometheus:latest
    user: root ### Neened to access to Docker Socket
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --log.level=error
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=7d
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    ports:
      - 127.0.0.1:9090:9090
    volumes:
      -  prometheusdata:/prometheus
      -  /var/run/docker.sock:/var/run/docker.sock:ro
      - ./configs/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
      - ./rules:/etc/prometheus/rules:ro
    labels:
       prometheus-job: prometheus

  grafana:
    restart: unless-stopped
    image: grafana/grafana:latest
    depends_on:
      - mimir
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_TIME_ZONE=Europe/Moscow
      - GF_LOG_LEVEL=warning
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_AUTH_GENERIC_OAUTH_ENABLED=true
      - GF_AUTH_GENERIC_OAUTH_NAME=Login Keycloak
      - GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP=true
      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=grafana-oauth
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - GF_AUTH_GENERIC_OAUTH_SCOPES=openid email profile offline_access roles
      - GF_AUTH_GENERIC_OAUTH_AUTH_URL=http://localhost:8989/realms/master/protocol/openid-connect/auth
      - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=http://keycloak:8989/realms/master/protocol/openid-connect/token
      - GF_AUTH_GENERIC_OAUTH_API_URL=http://keycloak:8989/realms/master/protocol/openid-connect/userinfo
      - GF_AUTH_GENERIC_OAUTH_EMAIL_ATTRIBUTE_PATH=@.email || @.preferred_username
      - GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH=contains(resource_access."grafana-oauth".roles[*], 'gf_admin') && 'Admin' || contains(resource_access."grafana-oauth".roles[*], 'editor') && 'Editor' || 'Viewer'
      - GF_AUTH_GENERIC_OAUTH_TLS_SKIP_VERIFY_INSECURE=true
      - GF_DATAPROXY_SEND_USER_HEADER=true
    ports:
      - 127.0.0.1:3000:3000
    volumes:
      - grafanadata:/var/lib/grafana
      - ./provisioning/datasource.yaml:/etc/grafana/provisioning/datasources/single.yml
      - ./provisioning/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./dashboards:/var/lib/grafana/dashboards

  keycloak:
      command: start-dev
      image: quay.io/keycloak/keycloak:latest
      environment:
          - KC_LOG_LEVEL=INFO
          - KC_BOOTSTRAP_ADMIN_PASSWORD=${KEYCLOAK_PASSWORD}
          - KC_BOOTSTRAP_ADMIN_USERNAME=${KEYCLOAK_USERNAME}
          - KC_HEALTH_ENABLED=true
          - KC_HOSTNAME=http://localhost:8989
          - KC_HOSTNAME_BACKCHANNEL_DYNAMIC=true
          - KC_HTTP_PORT=8989
      healthcheck:
          test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { java.net.URI uri = java.net.URI.create(args[0]); System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)uri.toURL().openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9000/health/live']
          interval: 10s
          timeout: 5s
          retries: 5
      volumes: 
        - keycloakdata:/opt/keycloak
      ports:
          - 127.0.0.1:8989:8989

  nginx:
    image: docker.angie.software/angie:latest
    ports:
      - 127.0.0.1:9999:9999
    volumes:
      - ./configs/nginx.conf:/etc/angie/angie.conf
    environment:
      - ANGIE_LOAD_MODULES=angie-module-lua,ndk
      - GRAFANA_BASIC_AUTH=${GRAFANA_ADMIN}:${GRAFANA_PASSWORD}
    depends_on:
      - mimir

  alloy:
   image: grafana/alloy:latest
   privileged: true
   ports:
     - 127.0.0.1:12345:12345
     - 127.0.0.1:4317:4317
     - 127.0.0.1:4318:4318
   environment:
      - ALLOY_DEPLOY_MODE=docker
      - DB_USER=${GHOST_DB_USER}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
   volumes:
      - ./configs/config.alloy:/etc/alloy/config.alloy
      - /proc:/rootproc:ro
      - /var/run/docker.sock.raw:/var/run/docker.sock
      - /sys:/sys:ro
      - /:/rootfs:ro
      - /dev/disk/:/dev/disk:ro
      - /var/lib/docker/:/var/lib/docker:ro
   command: run --disable-reporting --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy 
   extra_hosts:
        - "host.docker.internal:host-gateway" # Map "real" locahost in Docker container
   depends_on:
      - mimir

volumes:
  prometheusdata: {}
  mimirdata: {}
  grafanadata: {}
  keycloakdata: {}

networks:
  default:
    external: true
    name: observability