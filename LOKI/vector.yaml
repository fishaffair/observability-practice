api:
  enabled: true

data_dir: /var/lib/vector

sources:
  docker_logs:
    type: docker_logs
    include_labels:
      - vector.enabled=true

transforms:
  docker_parser:
    type: remap
    inputs: 
      - docker_logs # Delete unused labels
    source: |
        del(.container_created_at)
        del(.container_id)
        del(.stream)
        del(.source_type)
        del(.label."com.docker.compose.image")
        del(.label."com.docker.compose.oneoff")
        del(.label."com.docker.compose.depends_on")
        del(.label."com.docker.compose.version")
        del(.label."com.docker.compose.container-number")
        del(.label."com.docker.compose.config-hash")
        del(.label."com.docker.compose.project.config_files")
        del(.label."com.docker.compose.project.working_dir")
        del(.label."com.docker.compose.replace")

  docker_filter:
    type: filter
    inputs:
      - docker_parser
    condition: '!(contains(string!(.message), "info", false) || contains(string!(.message), "debug", false))'

sinks:
  loki:
    type: loki
    compression: gzip
    encoding:
      codec: json
      pretty: true
    out_of_order_action: accept
    labels:
      service_name: "{{ label.\"com.docker.compose.service\" }}"
      compose_project: "{{ label.\"com.docker.compose.project\" }}"
      container_name: "{{ container_name }}"
      source: vector
    structured_metadata:
      image: "{{ image }}"
    tenant_id: "{{ label.\"org.tenant.name\" }}"
    inputs:
      - docker_filter
        # - docker_logs
    endpoint: http://loki:3100