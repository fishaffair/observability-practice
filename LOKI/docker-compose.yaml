name: loki
services:
  vector:
    image: timberio/vector:nightly-alpine
    container_name: vector
    volumes:
      - ./vector.yaml:/etc/vector/vector.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "127.0.0.1:8686:8686"
    depends_on:
      - loki

  log-generator-floral:
    image: mingrammer/flog
    container_name: flog-floral
    labels:
      - org.tenant.name=floral
      - vector.enabled=true
    command:
      - --loop
      - --number=10
      - --delay=5000ms
    depends_on:
      - vector
  log-generator-entity:
    image: mingrammer/flog
    container_name: flog-entity
    labels:
      - org.tenant.name=entity
      - vector.enabled=true
    command:
      - --loop
      - --format=json
      - --number=10
      - --delay=5000ms
    depends_on:
      - vector

  loki:
    image: grafana/loki:latest
    container_name: loki
    hostname: floral
    ports:
      - "127.0.0.1:3100:3100"
    volumes:
      - ./loki.yaml:/etc/loki/local-config.yaml
      - lokidata:/loki
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    ports:
      - "127.0.0.1:3000:3000"
    entrypoint:
       - sh
       - -euc
       - |
         mkdir -p /etc/grafana/provisioning/datasources
         cat <<EOF > /etc/grafana/provisioning/datasources/floral.yaml
         apiVersion: 1
         datasources:
         - name: Loki-floral
           type: loki
           access: proxy
           orgId: 1
           url: 'http://loki:3100'
           basicAuth: false
           version: 1
           editable: true 
           jsonData:
             httpHeaderName1: "X-Scope-OrgID"
           secureJsonData:
             httpHeaderValue1: "floral"
         EOF
         cat <<EOF > /etc/grafana/provisioning/datasources/entity.yaml
         apiVersion: 1
         datasources:
         - name: Loki-entity
           type: loki
           access: proxy
           orgId: 1
           url: 'http://loki:3100'
           basicAuth: false
           isDefault: true
           version: 1
           jsonData:
             httpHeaderName1: "X-Scope-OrgID"
           secureJsonData:
             httpHeaderValue1: "entity"
         EOF
         /run.sh
    depends_on:
      - loki

volumes:
  lokidata: {}
    
networks:
  default:
    external: true
    name: observability